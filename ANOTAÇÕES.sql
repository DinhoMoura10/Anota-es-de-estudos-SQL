/* SELEÇÃO PROJEÇÃO E JUNÇÃO */

SELECT NOW() AS DATA_HORA;

SELECT 'ANDREI MOURA';

SELECT 'BANCO DE DADOS';

/* ALIAS DE COLUNAS */

SELECT NOME, SEXO, EMAIL FROM CLIENTE;

SELECT NOME, SEXO, EMAIL, ENDERECO, FROM CLIENTE;


SELECT NOME, ENDERECO FROM CLIENTE
WHERE SEXO = 'M';

SELECT NOME, ENDEREÇO FROM CLIENTE
WHERE ENDEREÇO LIKE '%MG';

UPDATE CITY 
SET NAME = 'SANTOS1' 
WHERE NAME = 'SANTOS';



/*CHAVE ESTRANGEIRA É A CHAVE QIE VAI ATE A OUTRA TABELA E FAZ A REFERENCIA */

/* EM RELACIONAMENTO DE FK 1X1 A CHAVE FICA COM A TABELA MAIS FRACA */

/* EM RELACIONAMENTOS 1 X N A CHAVE ESTRANGEIRA FICA SEMPRE COM N */

/*
   		DML - DATA MANIPULATION LANGUAGE
   		DDL - DATA DEFINITION LANGUAGE 
   		DCL - DATA CONTROL LANGUAGE 
   		TCL - TRANSACTION CONTROL LANGUAGE 
*/


 /* DML */ 

/* INSERT */

INSERT INTO CLIENTE VALUES(NULL,'PAULA','M',NULL,'77437493');
INSERT INTO ENDERECO VALUES(NULL,'RUA JOAQUIM SILVA','ALVORADA','NITEROI','RJ',7);

SELECT * FROM CLIENTE;

/* FILTROS */

SELECT * FROM CLIENTE
WHERE SEXO = 'M';

/* UPDATE */

SELECT * FROM CLIENTE
WHERE IDCLIENTE = 7;

UPDATE CLIENTE
SET SEXO = 'F'
WHERE IDCLIENTE = 7;

/* DELETE */ 

INSERT INTO CLIENTE VALUES(NULL,'XXX','M',NULL,'XXX');

SELECT * FROM CLIENTE
WHERE IDCLIENTE = 8;

DELETE FROM CLIENTE WHERE IDCLIENTE = 8;

/* 
  DDL - DATA DEFINITION LANGUAGE
*/

CREATE TABLE PRODUTO(
	IDPRODUTO INT PRIMARY KEY AUTO_INCREMENT,
	NOME_PRODUTO VARCHAR(30) NOT NULL,
	PRECO INT,
	FRETE FLOAT(10,2) NOT NULL
);

/* ALTER TABLE */

/* ALTERANDO O NOME DE UMA COLUNA - CHANGE */

LTER TABLE PRODUTO
CHANGE PRECO VALOR_UNITARIO INT NOT NULL;

DESC PRODUTO;

+----------------+-------------+------+-----+---------+----------------+
| Field          | Type        | Null | Key | Default | Extra          |
+----------------+-------------+------+-----+---------+----------------+
| IDPRODUTO      | int(11)     | NO   | PRI | NULL    | auto_increment |
| NOME_PRODUTO   | varchar(30) | NO   |     | NULL    |                |
| VALOR_UNITARIO | int(11)     | NO   |     | NULL    |                |
| FRETE          | float(10,2) | NO   |     | NULL    |                |
+----------------+-------------+------+-----+---------+----------------+

ALTER TABLE PRODUTO
CHANGE VALOR_UNITARIO VALOR_UNITARIO INT;

DESC PRODUTO;

+----------------+-------------+------+-----+---------+----------------+
| Field          | Type        | Null | Key | Default | Extra          |
+----------------+-------------+------+-----+---------+----------------+
| IDPRODUTO      | int(11)     | NO   | PRI | NULL    | auto_increment |
| NOME_PRODUTO   | varchar(30) | NO   |     | NULL    |                |
| VALOR_UNITARIO | int(11)     | YES  |     | NULL    |                |
| FRETE          | float(10,2) | NO   |     | NULL    |                |
+----------------+-------------+------+-----+---------+----------------+

/* MODIFY - ALTERANDO O TIPO */

ALTER TABLE PRODUTO
MODIFY VALOR_UNITARIO VARCHAR(50) NOT NULL;

/* ADICIONANDO COLUNAS */

ALTER TABLE PRODUTO
ADD PESO FLOAT(10,2) NOT NULL;

/* APAGANDO UMA COLUNA */

ALTER TABLE PRODUTO
DROP COLUMN PESO;

/* ADICIONANDO UMA COLUNA NA ORDEM ESPECIFICA */

ALTER TABLE PRODUTO
ADD COLUMN PESO FLOAT(10,2) NOT NULL
AFTER NOME_PRODUTO;

ALTER TABLE PRODUTO
DROP COLUMN PESO;

ALTER TABLE PRODUTO
ADD COLUMN PESO FLOAT(10,2) NOT NULL
FIRST;


STATUS 

DELIMITER $

/* STORAGE PROCEDURES */

CREATE PROCEDURE NOME_EMPRESA()
BEGIN 
	
	SELECT 'UNIVERSIDADE DOS DADOS' AS EMPRESA;

END
$

/* CHAMANDO UMA PROCEDURE */

CALL NOME_EMPRESA()$

/* APAGANDO UMA PROCEDURES */

DROP PROCEDURE NOME_EMPRESA;

/* PROCEDURES COM PARAMETROS */

CREATE PROCEDURE CONTA(NUMERO1 INT, NUMERO2 INT)
BEGIN 
	
	SELECT NUMERO1 + NUMERO2 AS CONTA;

END
$


CALL CONTA(100, 50);


/* PROCEDURES */

CREATE DATABASE PROJETO;

CREATE TABLE CURSOS(
		IDCURSO INT PRIMARY KEY AUTO_INCREMENT,
		NOME VARCHAR(30) NOT NULL,
		HORAS INT(3) NOT NULL, 
		VALOR FLOAT(10,2) NOT NULL
);

INSERT INTO CURSOS VALUES(NULL,'JAVA',30,500.00);
INSERT INTO CURSOS VALUES(NULL,'FUNDAMENTOS DE BANCOS DE DADOS',40,700.00);


DELIMITER @

CREATE PROCEDURE CAD_CURSO(P_NOME VARCHAR(30),
								 					 P_HORAS INT (30),
								 					 P_VALOR FLOAT(10,2) )
BEGIN
	INSERT INTO CURSOS VALUES(NULL, P_NOME, P_HORAS, P_VALOR);
END 
@

DELIMITER ;

CALL CAD_CURSO('WINDOWS SERVER', 40, 500.50);
CALL CAD_CURSO('SUPORTE TECNICO', 20, 200.00);
CALL CAD_CURSO('SQL SERVER', 60, 600.30);

CREATE PROCEDURE CONSULT_CURSOS(P_IDCURSO INT)
BEGIN
			SELECT NOME, HORAS, VALOR FROM CURSOS
			WHERE IDCURSO = P_IDCURSO;
END
@

CALL CONSULT_CURSOS(1);


/* MAX - TRAZ O VALOR MAXIMO DE UMA COLUNA */

SELECT MAX(FEVEREIRO) AS MAIOR_FEV
FROM VENDEDORES;


/* MIN - TRAZ O VALOR MINIMO DE UMA COLUNA */

SELECT MIN(FEVEREIRO) AS MENOR_FEV
FROM VENDEDORES;

/* AVG - TRAZ O VALOR MEDIO DE UMA COLUNA */

SELECT AVG(FEVEREIRO) AS MEDIA_FEV
FROM VENDEDORES;

/* VARIAS FUNCOES */

SELECT MAX(JANEIRO) AS MAX_JAN,
       MIN(JANEIRO) AS MIN_JAN,
	   AVG(JANEIRO) AS MEDIA_JAN
	   FROM VENDEDORES;
	 
/*TRUNCATE */
	 
SELECT MAX(JANEIRO) AS MAX_JAN,
       MIN(JANEIRO) AS MIN_JAN,
	   TRUNCATE(AVG(JANEIRO),2) AS MEDIA_JAN
	   FROM VENDEDORES;


SELECT MARCO, NOME 
FROM VENDEDORES 
WHERE MARCO = (SELECT MIN(MARCO) FROM VENDEDORES);

SELECT MARCO, NOME 
FROM VENDEDORES 
WHERE MARCO = (SELECT MAX(MARCO) FROM VENDEDORES);

SELECT FEVEREIRO, NOME 
FROM VENDEDORES 
WHERE FEVEREIRO > (SELECT AVG(FEVEREIRO) FROM VENDEDORES);

SELECT AVG(FEVEREIRO) FROM VENDEDORES;


/* TRABALAHNDO COM LINHA */

SELECT NOME,
			 JANEIRO,
			 FEVEREIRO,
			 MARCO,
			 (JANEIRO+FEVEREIRO+MARCO) AS TOTAL,
			 TRUNCATE((JANEIRO+FEVEREIRO+MARCO)/3,2) AS MEDIA
			 FROM VENDEDORES;


SELECT NOME,
			 JANEIRO,
			 FEVEREIRO,
			 MARCO,
			 (JANEIRO+FEVEREIRO+MARCO) AS TOTAL,
			 TRUNCATE((JANEIRO+FEVEREIRO+MARCO)/3,2) AS MEDIA,
			 (JANEIRO+FEVEREIRO+MARCO) * 0.15 AS BONUS
			 FROM VENDEDORES;

ALTER TABLE VENDEDORES 
ADD COLUMN TESTE VARCHAR(5);

ALTER TABLE VENDEDORES
MODIFY TESTE ;

ALTER TABLE PESSOA
ADD PRIMARY KEY(COLUNA1);

ALTER TABLE VENDEDORES
ADD FOREIGN KEY(TESTE)
REFERENCES PESSOAS(COLUNA1);

DROP TABLE ENDERECO;
DROP TABLE TELEFONE;
DROP TABLE CLIENTE;

CREATE TABLE CLIENTE(
			IDCLIENTE INT, 
			NOME VARCHAR(30)						
);

CREATE TABLE TELEFONE(
			IDTELEFONE INT,
			TIPO CHAR(3),
			NUMERO VARCHAR(11) NOT NULL,
			ID_CLIENTE INT
);

ALTER TABLE CLIENTE ADD CONSTRAINT PK_CLIENTE
PRIMARY KEY (IDCLIENTE);

ALTER TABLE TELEFONE ADD CONSTRAINT FK_CLIENTE_TELEFONE
FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE (IDCLIENTE);

SHOW CREATE TABLE CLIENTE;

SHOW CREATE TABLE TELEFONE;

USE information_schema;

DESC TABLE_CONSTRAINTS;

SELECT CONSTRAINT_NAME AS NOME, 
			 CONSTRAINT_SCHEMA AS BANCO,
			 CONSTRAINT_NAME AS NOME_REGRA,
			 CONSTRAINT_TYPE AS TIPO
			 FROM TABLE_CONSTRAINTS
			 WHERE CONSTRAINT_SCHEMA = 'PROJETO';

ALTER TABLE TELEFONE  
DROP FOREIGN KEY FK_CLIENTE_TELEFONE;

CREATE TRIGGER BKP_USUARIO
BEFORE DELETE ON USUARIO 
FOR EACH ROW 
BEGIN 
			
	INSERT INTO BKP_USUARIO VALUES
	(NULL,OLD.IDUSUARIO, OLD.NOME,OLD.LOGIN);	

END
$

INSERT INTO USUARIO VALUES(NULL,'ANDREI', 'DREI', 'ARROBA');

DELETE FROM USUARIO
WHERE NOME = 'ANDREI';

SELECT * FROM BKP_USUARIO;

CREATE DATABASE LOJA;

CREATE TABLE PRODUTO(
	IDPRODUTO INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30),
	VALOR FLOAT(10,2)
);

CREATE DATABASE BKP_LOJA;

CREATE TABLE BKP_PRODUTO(
	IDBKP INT PRIMARY KEY AUTO_INCREMENT,
	IDPRODUTO INT,
	NOME VARCHAR(30),
	VALOR FLOAT(10,2)
);

CREATE TRIGGER BKP_LOJA
BEFORE INSERT ON PRODUTO 
FOR EACH ROW
BEGIN 
	
	INSERT INTO BKP_LOJA.BKP_PRODUTO VALUES(NULL, NEW.IDPRODUTO, NEW.NOME, NEW.VALOR);

END
$

INSERT INTO PRODUTO VALUES(NULL,'LIVRO MODELAGEM',50.00);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO BI',80.00);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO ORACLE',70.00);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO SQL SERVER',100.00);

SELECT * FROM PRODUTO;

SELECT * FROM BKP_LOJA.BKP_PRODUTO;

DROP TRIGGER BKP_LOJA;

CREATE TRIGGER BKP_LOJA_AFTER
AFTER INSERT ON PRODUTO 
FOR EACH ROW
BEGIN 
	
	INSERT INTO BKP_LOJA.BKP_PRODUTO VALUES(NULL, NEW.IDPRODUTO, NEW.NOME, NEW.VALOR, 'I');

END
$
INSERT INTO PRODUTO VALUES(NULL,'LIVRO C#',100.00);

/* AUDITORIA */ 

ALTER TABLE BKP_LOJA.BKP_PRODUTO
ADD EVENTO CHAR (1);


CREATE TRIGGER BKP_LOJA_DEL 
BEFORE DELETE ON PRODUTO 
FOR EACH ROW 
BEGIN 

	INSERT INTO BKP_LOJA.BKP_PRODUTO VALUES(NULL, OLD.IDPRODUTO, OLD.NOME, OLD.VALOR, 'D');

END 
$

DELETE FROM PRODUTO WHERE IDPRODUTO = 1;

CREATE TABLE BKP_PRODUTO(
	IDBKP INT PRIMARY KEY AUTO_INCREMENT,
	IDPRODUTO INT,
	NOME VARCHAR(30),
	VALOR_ORIGINAL FLOAT(10,2),
	VALOR_ALTERADO FLOAT(10,2),
	DATE DATETIME,
	USUARIO VARCHAR(30),
	EVENTO CHAR(1)
);


CREATE TRIGGER AUDIT_PROD
AFTER UPDATE ON PRODUTO 
FOR EACH ROW 
BEGIN 

	INSERT INTO BKP_LOJA.BKP_PRODUTO VALUES(NULL, OLD.IDPRODUTO, OLD.NOME, 
		OLD.VALOR, NEW.VALOR, NOW(), CURRENT_USER(), 'U');

END
$

UPDATE PRODUTO SET VALOR = 110.00
WHERE IDPRODUTO = 4;

SELECT * FROM BKP_LOJA.BKP_PRODUTO;


CREATE DATABASE ESTUDO;

CREATE TABLE CURSOS(
	IDCURSO INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30),
	HORAS INT,
	VALOR FLOAT(10.2),
	ID_PREREQ INT
);

ALTER TABLE CURSOS ADD CONSTRAINT FK_PREREQ
FOREIGN KEY (ID_PREREQ) REFERENCES CURSOS(IDCURSO);

INSERT INTO CURSOS VALUES(NULL,'BD RELACIONAL',20,400.00,NULL);
INSERT INTO CURSOS VALUES(NULL,'BUSINESS INTELLIGENCE',40,800.00,1);
INSERT INTO CURSOS VALUES(NULL,'RELATORIOS AVANCADOS',20,600.00,2);
INSERT INTO CURSOS VALUES(NULL,'LOGICA PROGRAM',20,400.00,NULL);
INSERT INTO CURSOS VALUES(NULL,'RUBY',30,500.00,4);

 CREATE DATABASE CURSORES;
USE CURSORES;

CREATE TABLE VENDEDORES(
	IDVENDEDOR INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(50),
	JAN INT,
	FEV INT,
	MAR INT
);

INSERT INTO VENDEDORES VALUES(NULL,'MAFRA',32432,242334,574545);
INSERT INTO VENDEDORES VALUES(NULL,'CLARA',65465,65443,653454);
INSERT INTO VENDEDORES VALUES(NULL,'JOAO',12432,65356,8756);
INSERT INTO VENDEDORES VALUES(NULL,'LILIAN',4567,9676,8765);
INSERT INTO VENDEDORES VALUES(NULL,'ANTONIO',3467,68756,99765);
INSERT INTO VENDEDORES VALUES(NULL,'GLORIA',54786,76889,7098);

SELECT NOME, (JAN + FEV + MAR)AS TOTAL FROM VENDEDORES;

SELECT NOME, (JAN+FEV+MAR) AS TOTAL, (JAN+FEV+MAR)/3 AS MEDIA FROM VENDEDORES;

CREATE TABLE VEND_TOTAL(
	NOME VARCHAR(50),
	JAN INT,
	FEV INT,
	MAR INT,
	TOTAL INT,
	MEDIA INT
);

CREATE PROCEDURE ISEREDADOS()
BEGIN 
			DECLARE FIM INT DEFAULT 0;
			DECLARE VAR1, VAR2, VAR3, VMEDIA, VTOTAL INT;
			DECLARE VNOME VARCHAR(50);
			
			DECLARE REG CURSOR FOR(
					SELECT NOME, JAN, FEV, MAR FROM VENDEDORES
				);

			DECLARE CONTINUE HANDLER FOR NOT FOUND SET FIM= 1;

			OPEN REG;

			REPEAT 

				FETCH REG INTO VNOME, VAR1, VAR2, VAR3;
				IF NOT FIM THEN 


					SET VTOTAL = VAR1 + VAR2 + VAR3;
					SET VMEDIA = VTOTAL/3;

					INSERT INTO VEND_TOTAL VALUES( VNOME, VAR1, VAR2, VAR3, VTOTAL, VMEDIA);

				END IF;

			UNTIL FIM END REPEAT;

			CLOSE REG;

END

$

CALL INSEREDADOS();

CREATE DATABASE CONSULTORIO;

USE CONSULTORIO;

CREATE TABLE PACIENTE(
	IDPACIENTE INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30),
	SEXO CHAR(1),
	EMAIL VARCHAR(30),
	NASCIMENTO DATE
);

CREATE TABLE MEDICO(
	IDMEDICO INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30),
	SEXO CHAR(1),
	ESPECIALIDADE VARCHAR(30),
	FUNCIONARIO ENUM('S','N')
);

CREATE TABLE HOSPITAL(
	IDHOSPITAL INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30),
	BAIRRO VARCHAR(30),
	CIDADE VARCHAR(30),
	ESTADO CHAR(2)
);

CREATE TABLE CONSULTA(
	IDCONSULTA INT PRIMARY KEY AUTO_INCREMENT,
	ID_PACIENTE INT,
	ID_MEDICO INT,
	ID_HOSPITAL INT,
	DATA DATETIME,
	DIAGNOSTICO VARCHAR(50)
);

CREATE TABLE INTERNACAO(
	IDINTERNACAO INT PRIMARY KEY AUTO_INCREMENT,
	ENTRADA DATETIME,
	QUARTO INT,
	SAIDA DATETIME,
	OBSERVACOES VARCHAR(50),
	ID_CONSULTA INT UNIQUE	
);  


ALTER TABLE CONSULTA ADD CONSTRAINT FK_CONSULTA_PACIENTE
FOREIGN KEY (ID_PACIENTE) REFERENCES PACIENTE(IDPACIENTE);

ALTER TABLE CONSULTA ADD CONSTRAINT FK_CONSULTA_MEDICO
FOREIGN KEY (ID_MEDICO) REFERENCES MEDICO(IDMEDICO);

ALTER TABLE CONSULTA ADD CONSTRAINT FK_CONSULTA_HOSPITAL
FOREIGN KEY (ID_HOSPITAL) REFERENCES HOSPITAL(IDHOSPITAL);

ALTER TABLE INTERNACAO ADD CONSTRAINT FK_INTERNACAO_CONSULTA
FOREIGN KEY (ID_CONSULTA) REFERENCES CONSULTA(IDCONSULTA);


